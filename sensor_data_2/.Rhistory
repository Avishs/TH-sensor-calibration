library(readxl)
WS <- read_excel("_Projects/TH-sensors/Update_200224/weather_station_data/Jan_Feb_2024.xlsx")
View(WS)
View(WS)
getwd()
path <- paste0(getwd(),"/sensor_data_2/Sensor 1")
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files(pattern = "(?i)\\.CSV$", full.names = TRUE) %>%
# create a named vector: you need it to assign ids in the next step.
# and remove file extension to get clean colnames
set_names(tools::file_path_sans_ext(basename(.))) %>%
# read file one by one, bind them in one df and create id column
map_dfr(read.csv, col.names = c("Wavenumber", "V2"), .id = "colname") %>%
# pivot to create one column for each .id
pivot_wider(names_from = colname, values_from = V2)
library(tidyr)
library(purrr)
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files(pattern = "(?i)\\.CSV$", full.names = TRUE) %>%
# create a named vector: you need it to assign ids in the next step.
# and remove file extension to get clean colnames
set_names(tools::file_path_sans_ext(basename(.))) %>%
# read file one by one, bind them in one df and create id column
map_dfr(read.csv, col.names = c("Wavenumber", "V2"), .id = "colname") %>%
# pivot to create one column for each .id
pivot_wider(names_from = colname, values_from = V2)
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files(pattern = "(?i)\\.CSV$", full.names = TRUE) %>%
# create a named vector: you need it to assign ids in the next step.
# and remove file extension to get clean colnames
set_names(tools::file_path_sans_ext(basename(.))) %>%
# read file one by one, bind them in one df and create id column
map_dfr(read_csv)
l
library(readr)
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files(pattern = "(?i)\\.CSV$", full.names = TRUE) %>%
# create a named vector: you need it to assign ids in the next step.
# and remove file extension to get clean colnames
set_names(tools::file_path_sans_ext(basename(.))) %>%
# read file one by one, bind them in one df and create id column
map_dfr(read_csv)
path <- paste0(getwd(),"/sensor_data_2/Sensor 1")
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files(pattern = "(?i)\\.CSV$", full.names = TRUE)
View(WS)
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files(pattern = "(?i)\\.csv$", full.names = TRUE)
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files()
# ========= o
script_path <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(script_path)
setwd('..')
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files()
path <- paste0(getwd(),"/sensor_data_2/Sensor 1")
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files()
path
path <- paste0(getwd(),"/sensor_data_2/Sensor 1/")
Sensor_i <- path %>%
# get csvs full paths. (?i) is for case insensitive
list.files()
list.dirs()
list.dirs(path)
path
Sensor_i <- getwd() %>%
# get csvs full paths. (?i) is for case insensitive
list.dirs()
Sensor_i
list.dirs(recursive=FALSE)
# ========= o
script_path <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(script_path)
Sensor_i <- getwd() %>%
# get csvs full paths. (?i) is for case insensitive
list.dirs(recursive = FALSE) #%>%
Sensor_i
setwd("./sensor_data_2/")
getwd
getwd()
for {folder in list.dirs()}{
for (folder in list.dirs()){
print(folder)
}
list.files(path=folder)
sensor_i <-
list.files(path=folder,
recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.)))
sensor_i
Sensor_i <-
# get csvs full paths. (?i) is for case insensitive
list.dirs(recursive = FALSE) %>%
# create a named vector: you need it to assign ids in the next step.
# and remove file extension to get clean colnames
set_names(tools::file_path_sans_ext(basename(.))) %>%
# read file one by one, bind them in one df and create id column
map_dfr(read_csv) %>%
pivot_wider(names_from = colname, values_from = V2)
sensor_i <-
list.files(path=folder,
recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read_csv) %>%
pivot_wider(names_from = colname, values_from = V2)
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read_csv) %>%
pivot_wider(names_from = colname, values_from = V2)
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read_csv(path=folder)) %>%
pivot_wider(names_from = colname, values_from = V2)
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read_csv(paste0(getwd(),.))) %>%
pivot_wider(names_from = colname, values_from = V2)
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read_csv(paste0(getwd(),'/',folder,'/',.))) %>%
pivot_wider(names_from = colname, values_from = V2)
paste0(getwd(),'/',folder,'/')
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read_csv(paste0(folder,'/',.))) %>%
pivot_wider(names_from = colname, values_from = V2)
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read_csv(paste0(folder,'/',.)))
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read.csv(paste0(folder,'/',.))) #%>%
sensor_i <- folder %>%
list.files(recursive = FALSE) %>%
set_names(tools::file_path_sans_ext(basename(.))) %>%
map_dfr(read.csv,paste0(folder,'/',.)) #%>%
folder
str_detect(folder, "([S][e])\w+")
str_detect(folder, "([S][e])\w+$")
str_detect(folder, "([S][e])\\w\+")
str_detect(folder, "([S][e])\\w+")
library(stringr)
str_detect(folder, "([S][e])\\w+")
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
assign(folder, df)
}
}
library(tidyr)
setwd("./sensor_data_2/")
# ========= o
script_path <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(script_path)
setwd("./sensor_data_2/")
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
assign(folder, df)
}
}
library(dplyr)
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
assign(folder, df)
}
}
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows()
assign(folder, df)
}
}
View(df)
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows()
assign(folder, df)
get(folder)
}
}
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
assign(folder,
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows()
)
}
}
strsplit("./Sensor 6","/")
str_split("./Sensor 6","/")
str_split("./Sensor 6","/")[2]
str_split("./Sensor 6","/")[1]
str_split("./Sensor 6","/")[[1]]
str_split("./Sensor 6","/")[[1]][2]
strsplit("./Sensor 6","/")[[1]][2]
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows()
assign(strsplit(folder)[[1]][2], 5)
}
}
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows()
assign(strsplit(folder, "/")[[1]][2], 5)
}
}
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows()
assign(strsplit(folder, "/")[[1]][2], df)
}
}
rm(df)
View(`Sensor 9`)
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date")
assign(strsplit(folder, "/")[[1]][2], df)
rm(df)
}
}
View(`Sensor 7`)
View(`Sensor 18`)
View(`Sensor 16`)
View(`Sensor 1`)
View(`Sensor 3`)
View(`Sensor 7`)
library(readxl)
WeatherS <- read_excel("~/_Projects/TH-sensors/Update_200224/weather_station_data/Jan_Feb_2024.xlsx")
View(WeatherS)
View(WeatherS)
library(lubridate)
?lubridate
View(`Sensor 17`)
View(`Sensor 10`)
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date") %>%
mutate(Date = dmy(Date))
assign(strsplit(folder, "/")[[1]][2], df)
rm(df)
}
}
WeatherS <- read_excel("./weather_station_data/Jan_Feb_2024.xlsx")
getwd()
# read weather station file
setwd('..')
WeatherS <- read_excel("./weather_station_data/Jan_Feb_2024.xlsx")
View(`Sensor 4`)
script_path <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(script_path)
# Merge all the data for one sensor
# open each folder and read in and merge all the files
setwd("./sensor_data_2/")
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date") %>%
mutate(Date = dmy(Date))
assign(str_replace(strsplit(folder, "/")[[1]][2]," ", "_"), df)
rm(df)
}
}
# read weather station file
setwd('..')
WeatherS <- read_excel("./weather_station_data/Jan_Feb_2024.xlsx")
View(Sensor_2)
# ========= o
script_path <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(script_path)
setwd("./sensor_data_2/")
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date") %>%
mutate(DateTime = paste0(Date," ", hour, ":", minute,":","00" ))
mutate(Date = dmy(Date)) %>%
assign(str_replace(strsplit(folder, "/")[[1]][2]," ", "_"), df)
rm(df)
}
}
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date") #%>%
#mutate(DateTime = parse_date_time(paste0(Date," ", hour, ":", minute,":","00" ))) %>%
#mutate(Date = dmy(Date))
assign(str_replace(strsplit(folder, "/")[[1]][2]," ", "_"), df)
rm(df)
}
}
View(Sensor_19)
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date") %>%
mutate(DateTime = parse_date_time(paste0(Date," ", Hour, ":", Minute,":","00" )))
#mutate(Date = dmy(Date))
assign(str_replace(strsplit(folder, "/")[[1]][2]," ", "_"), df)
rm(df)
}
}
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date")
df$DateTime <- paste0(Date," ", Hour, ":", Minute,":","00"))
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date")
df$DateTime <- paste0(Date," ", Hour, ":", Minute,":","00")
#mutate(Date = dmy(Date))
assign(str_replace(strsplit(folder, "/")[[1]][2]," ", "_"), df)
rm(df)
}
}
View(df)
for (folder in list.dirs()){
print(folder)
if (str_detect(folder, "([S][e])\\w+")){
df <-
folder %>%
list.files(recursive = FALSE, full.names = TRUE) %>%
lapply(read_csv, col_types = cols(.default = "c")) %>%
bind_rows() %>%
filter(Date!="Date")
df$DateTime <- paste0(df$Date," ", df$Hour, ":", df$Minute,":","00")
#mutate(Date = dmy(Date))
assign(str_replace(strsplit(folder, "/")[[1]][2]," ", "_"), df)
rm(df)
}
}
View(Sensor_3)
?dmy_hms
df$DateTime <- dmy_hms(paste0(df$Date," ", df$Hour, ":", df$Minute,":","00"))
